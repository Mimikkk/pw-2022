<section class="@Cx("border-t-2 flex flex-col gap-2 p-2 w-full h-full rounded shadow", Color.Secondary["border", 8], Color["bg", Shade], hoverable, Class)">
  @if (Header is not null) {
    <div class="@Cx("flex items-center", HeaderClass)">
      @Header
    </div>
  }
  @ChildContent
  @if (Footer is not null) {
    <div class="@Cx("flex items-center mt-auto", FooterClass)">
      @Footer
    </div>
  }
</section>

@code {
  [Parameter]
  public RenderFragment? ChildContent { get; set; }
  [Parameter]
  public string? Class { get; set; }
  [Parameter]
  public int Shade { get; set; } = 1;
  [Parameter]
  public RenderFragment? Header { get; set; }
  [Parameter]
  public string? HeaderClass { get; set; }
  [Parameter]
  public Color Color { get; set; } = Color.Shade;
  [Parameter]
  public RenderFragment? Footer { get; set; }
  [Parameter]
  public string? FooterClass { get; set; }
  [Parameter]
  public bool NotHoverable { get; set; }

  private string? hoverable => !NotHoverable ? $"hover:shadow-lg transition-all hover:{Color["bg", Math.Min(Shade + 1, 9)]}" : null;
}
