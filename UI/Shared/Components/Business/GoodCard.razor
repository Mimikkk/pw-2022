@using DataModels.Goods
@using DataModels.Races
@using Bogus.DataSets
<Card Class="@Class">
  <CardHeader>
    <div class="flex w-full items-center gap-2">
      <Title>Dobro - @Good.Name</Title>
      <div class="flex gap-0.5 ml-auto">
        <button>
          <Icon Type="IconType.Pen" Size="Size.Sm" Interactive/>
        </button>
        <button>
          <Icon Type="IconType.Bin" Size="Size.Sm" Interactive/>
        </button>
      </div>
    </div>
  </CardHeader>
  <div class="flex gap-2">
    <Card Color="Color.Secondary" Shade="5">
      <div class="w-24 h-24 flex items-center justify-center">
        <Icon Type="IconType.Sun" Size="Size.Lg"/>
      </div>
    </Card>
    <Typography Overflow OverflowLines="5">
      @Good.Description
    </Typography>
  </div>
  @if (Producers is not null) {
    <div>
      <Typography Bold>Wytwarzane przez:</Typography>
      <div class="flex gap-1">
        @foreach (var producer in Producers) {
          <Icon Type="@IconType.Person" Size="@Size.Sm" Label="@producer.Name" Interactive/>
        }
      </div>
    </div>
  }
  <CardFooter>
    <NavLink href="@_href">
      <Title Class="flex gap-2" Interactive>
        <Icon Type="IconType.RightChevron" Size="Size.Sm" Interactive/>
        Więcej informacji
      </Title>
    </NavLink>
  </CardFooter>
</Card>

@code {
  [Parameter, EditorRequired]
  public GoodResource Good { get; set; } = null!;
  [Parameter]
  public List<RaceResource>? Producers { get; set; }
  [Parameter]
  public string? Class { get; set; }

  private string _href => $"goods/{Good.Name}";
}
