@page "/goods/{Name}"
@using DataModels.Races
@using DataModels.Goods
@using Services.Goods
@inject IGoodService GoodService
@inject NavigationManager NavManager


@if (Resource is null) {
  <LoadingBarrier/>
} else {
  <PageTitle>UI | @Resource.Name</PageTitle>

  <div class="flex w-full h-1/2 items-center justify-center">
    <GoodCard Class="w-1/2" Good="Resource" GoBackLink/>
  </div>
}


@code {
  [Parameter, EditorRequired]
  public string Name { get; set; } = null!;

  private GoodResourceWithProducer<RaceResource>? Resource { get; set; }

  protected override async Task OnInitializedAsync() {
    Resource = await GoodService.ReadWithProducer(Name.Replace('_', ' '));
    if (Resource is null) NavManager.NavigateTo("404");
  }
}
